//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFWebApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iDesc {
            get {
                return this.iDescField;
            }
            set {
                if ((object.ReferenceEquals(this.iDescField, value) != true)) {
                    this.iDescField = value;
                    this.RaisePropertyChanged("iDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iName {
            get {
                return this.iNameField;
            }
            set {
                if ((object.ReferenceEquals(this.iNameField, value) != true)) {
                    this.iNameField = value;
                    this.RaisePropertyChanged("iName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iQuantity {
            get {
                return this.iQuantityField;
            }
            set {
                if ((this.iQuantityField.Equals(value) != true)) {
                    this.iQuantityField = value;
                    this.RaisePropertyChanged("iQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iid {
            get {
                return this.iidField;
            }
            set {
                if ((this.iidField.Equals(value) != true)) {
                    this.iidField = value;
                    this.RaisePropertyChanged("iid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cashier", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp")]
    [System.SerializableAttribute()]
    public partial class Cashier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cName {
            get {
                return this.cNameField;
            }
            set {
                if ((object.ReferenceEquals(this.cNameField, value) != true)) {
                    this.cNameField = value;
                    this.RaisePropertyChanged("cName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cRole {
            get {
                return this.cRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.cRoleField, value) != true)) {
                    this.cRoleField = value;
                    this.RaisePropertyChanged("cRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cid {
            get {
                return this.cidField;
            }
            set {
                if ((this.cidField.Equals(value) != true)) {
                    this.cidField = value;
                    this.RaisePropertyChanged("cid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        WCFWebApp.ServiceReference1.Item[] GetItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        System.Threading.Tasks.Task<WCFWebApp.ServiceReference1.Item[]> GetItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertItem", ReplyAction="http://tempuri.org/IService1/InsertItemResponse")]
        void InsertItem(WCFWebApp.ServiceReference1.Item iobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertItem", ReplyAction="http://tempuri.org/IService1/InsertItemResponse")]
        System.Threading.Tasks.Task InsertItemAsync(WCFWebApp.ServiceReference1.Item iobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        void UpdateItem(WCFWebApp.ServiceReference1.Item iobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(WCFWebApp.ServiceReference1.Item iobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        void DeleteItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteItem", ReplyAction="http://tempuri.org/IService1/DeleteItemResponse")]
        System.Threading.Tasks.Task DeleteItemAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCFWebApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCFWebApp.ServiceReference1.IService1>, WCFWebApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFWebApp.ServiceReference1.Item[] GetItems() {
            return base.Channel.GetItems();
        }
        
        public System.Threading.Tasks.Task<WCFWebApp.ServiceReference1.Item[]> GetItemsAsync() {
            return base.Channel.GetItemsAsync();
        }
        
        public void InsertItem(WCFWebApp.ServiceReference1.Item iobj) {
            base.Channel.InsertItem(iobj);
        }
        
        public System.Threading.Tasks.Task InsertItemAsync(WCFWebApp.ServiceReference1.Item iobj) {
            return base.Channel.InsertItemAsync(iobj);
        }
        
        public void UpdateItem(WCFWebApp.ServiceReference1.Item iobj) {
            base.Channel.UpdateItem(iobj);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(WCFWebApp.ServiceReference1.Item iobj) {
            return base.Channel.UpdateItemAsync(iobj);
        }
        
        public void DeleteItem(int id) {
            base.Channel.DeleteItem(id);
        }
        
        public System.Threading.Tasks.Task DeleteItemAsync(int id) {
            return base.Channel.DeleteItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICashierService1")]
    public interface ICashierService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/GetCashiers", ReplyAction="http://tempuri.org/ICashierService1/GetCashiersResponse")]
        WCFWebApp.ServiceReference1.Cashier[] GetCashiers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/GetCashiers", ReplyAction="http://tempuri.org/ICashierService1/GetCashiersResponse")]
        System.Threading.Tasks.Task<WCFWebApp.ServiceReference1.Cashier[]> GetCashiersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/InsertCashier", ReplyAction="http://tempuri.org/ICashierService1/InsertCashierResponse")]
        void InsertCashier(WCFWebApp.ServiceReference1.Cashier cobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/InsertCashier", ReplyAction="http://tempuri.org/ICashierService1/InsertCashierResponse")]
        System.Threading.Tasks.Task InsertCashierAsync(WCFWebApp.ServiceReference1.Cashier cobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/UpdateCashier", ReplyAction="http://tempuri.org/ICashierService1/UpdateCashierResponse")]
        void UpdateCashier(WCFWebApp.ServiceReference1.Cashier cobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/UpdateCashier", ReplyAction="http://tempuri.org/ICashierService1/UpdateCashierResponse")]
        System.Threading.Tasks.Task UpdateCashierAsync(WCFWebApp.ServiceReference1.Cashier cobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/DeleteCashier", ReplyAction="http://tempuri.org/ICashierService1/DeleteCashierResponse")]
        void DeleteCashier(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashierService1/DeleteCashier", ReplyAction="http://tempuri.org/ICashierService1/DeleteCashierResponse")]
        System.Threading.Tasks.Task DeleteCashierAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICashierService1Channel : WCFWebApp.ServiceReference1.ICashierService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CashierService1Client : System.ServiceModel.ClientBase<WCFWebApp.ServiceReference1.ICashierService1>, WCFWebApp.ServiceReference1.ICashierService1 {
        
        public CashierService1Client() {
        }
        
        public CashierService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CashierService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashierService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashierService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFWebApp.ServiceReference1.Cashier[] GetCashiers() {
            return base.Channel.GetCashiers();
        }
        
        public System.Threading.Tasks.Task<WCFWebApp.ServiceReference1.Cashier[]> GetCashiersAsync() {
            return base.Channel.GetCashiersAsync();
        }
        
        public void InsertCashier(WCFWebApp.ServiceReference1.Cashier cobj) {
            base.Channel.InsertCashier(cobj);
        }
        
        public System.Threading.Tasks.Task InsertCashierAsync(WCFWebApp.ServiceReference1.Cashier cobj) {
            return base.Channel.InsertCashierAsync(cobj);
        }
        
        public void UpdateCashier(WCFWebApp.ServiceReference1.Cashier cobj) {
            base.Channel.UpdateCashier(cobj);
        }
        
        public System.Threading.Tasks.Task UpdateCashierAsync(WCFWebApp.ServiceReference1.Cashier cobj) {
            return base.Channel.UpdateCashierAsync(cobj);
        }
        
        public void DeleteCashier(int id) {
            base.Channel.DeleteCashier(id);
        }
        
        public System.Threading.Tasks.Task DeleteCashierAsync(int id) {
            return base.Channel.DeleteCashierAsync(id);
        }
    }
}
